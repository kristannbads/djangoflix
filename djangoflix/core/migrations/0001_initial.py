# Generated by Django 4.0.10 on 2023-08-30 02:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("slug", models.SlugField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "state",
                    models.CharField(
                        choices=[("PU", "Publish"), ("DR", "Draft")],
                        default="DR",
                        max_length=2,
                    ),
                ),
                (
                    "published_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("slug", models.SlugField(blank=True, null=True)),
                ("video_id", models.CharField(max_length=210, unique=True)),
                ("active", models.BooleanField(default=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "state",
                    models.CharField(
                        choices=[("PU", "Publish"), ("DR", "Draft")],
                        default="DR",
                        max_length=2,
                    ),
                ),
                (
                    "published_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlaylistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.IntegerField(default=1)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.playlist",
                    ),
                ),
                (
                    "video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.video",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "-timestamp"],
            },
        ),
        migrations.AddField(
            model_name="playlist",
            name="video",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="playlist_featured",
                to="core.video",
            ),
        ),
        migrations.AddField(
            model_name="playlist",
            name="videos",
            field=models.ManyToManyField(
                blank=True,
                related_name="playlist_item",
                through="core.PlaylistItem",
                to="core.video",
            ),
        ),
        migrations.CreateModel(
            name="VideoAllProxy",
            fields=[],
            options={
                "verbose_name": "All Video",
                "verbose_name_plural": "All Videos",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("core.video",),
        ),
        migrations.CreateModel(
            name="VideoPublishedProxy",
            fields=[],
            options={
                "verbose_name": "Published Video",
                "verbose_name_plural": "Published Videos",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("core.video",),
        ),
    ]
